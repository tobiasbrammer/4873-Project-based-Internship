INNER JOIN Sager
ON Sager.[No_]=Sagsposter.[Job No_]
WHERE 1=1
AND Year(Sagsposter.[Posting Date]) >= 2018
GROUP BY
Sagsposter.[Global Dimension 1 Code],
Sagsposter.[Job No_],
Sagsposter.[Posting Date],
Sagsposter.[Entry Type]
)
SELECT DISTINCT
Sagsposter.[Dato]
,Sagsposter.[Måned]
,Sagsposter.[Måned-år]
,Sagsposter.[År]
,Sager.[Job Posting Group] AS 'Sagsbogføringsgruppe'
,Sagsposter.[Afd]
,Sager.[No_] AS 'Sagsnr.'
,CASE Sager.[Status] WHEN 2 THEN 'Igangværende' ELSE 'Afsluttet' END AS 'Status'
,Sager.[Description] AS 'Beskrivelse'
,Kunder.[No_] AS 'Kundenummer'
,Kunder.[Name] AS 'Kundenavn'
,CONCAT(Sager.[Ship-to Address],' ',Sager.[Ship-to Post Code],' ',Sager.[Ship-to City]) AS 'Leveringsadresse'
,Sager.[Ship-to Post Code] AS 'Postnummer'
,Medarbejdere.[Name] AS 'Ansvarlig'
,(ISNULL(Sagsbudget.[Indtægtsbudget],0)) AS 'Slut-vurdering indtægt'
,(ISNULL(Sagsbudget.[Omkostningsbudget],0)) AS 'Slut-vurdering omkostninger'
,((ISNULL(Sagsbudget.[Indtægtsbudget],0)) - (ISNULL(Sagsbudget.[Omkostningsbudget],0))) AS 'Slut-vurdering DB'
,(ISNULL(Sagsposter.[Faktureret indtægt],0)) AS 'Faktureret indtægt'
,(ISNULL(Sagsposter.[Bogført omkostning],0)) 'Bogførte omkostninger'
,(ISNULL(Sagsposter.[Ressource omkostning],0)) AS 'Ressourceomkostninger'
,(ISNULL(Sagsposter.[Vare omkostning],0)) AS 'Vareomkostninger'
,(ISNULL(Sagsposter.[Andre omkostning],0)) AS  'Andre omkostninger'
,(ISNULL(Sagsposter.[Faktureret indtægt],0)) - (ISNULL(Sagsposter.[Bogført omkostning],0)) AS 'Dækningsbidrag'
,(ISNULL(Sagsbudget.[Indtægtsbudget],0) - ISNULL(Sagsposter.[Faktureret indtægt],0)) AS 'Budget - faktureret'
,(CASE
WHEN
((ISNULL(Sagsposter.[Bogført omkostning],0)) = 0 AND (ISNULL(Sagsbudget.[Omkostningsbudget],0)) = 0)
OR ISNULL((ISNULL(Sagsbudget.[Indtægtsbudget],0) - ISNULL(Sagsbudget.[Omkostningsbudget],0))/NULLIF((Sagsbudget.[Indtægtsbudget]),0),0) >= 1
THEN (ISNULL(Sagsbudget.[Indtægtsbudget],0))
ELSE
CASE
WHEN ((ISNULL(Sagsposter.[Bogført omkostning],0))/NULLIF((1-ISNULL((ISNULL(Sagsbudget.[Indtægtsbudget],0) - ISNULL(Sagsbudget.[Omkostningsbudget],0))/NULLIF((Sagsbudget.[Indtægtsbudget]),0),0)), 0)) > (ISNULL(Sagsbudget.[Indtægtsbudget],0))
THEN (ISNULL(Sagsbudget.[Indtægtsbudget],0))
ELSE ((ISNULL(Sagsposter.[Bogført omkostning],0))/NULLIF((1-ISNULL((ISNULL(Sagsbudget.[Indtægtsbudget],0) - ISNULL(Sagsbudget.[Omkostningsbudget],0))/NULLIF((Sagsbudget.[Indtægtsbudget]),0),0)), 0))
END
END) AS 'Beregnet indtægt'
,(CASE
WHEN
(Sagsposter.[Bogført omkostning] = 0 AND Sagsbudget.[Omkostningsbudget] = 0)
OR ISNULL((ISNULL(Sagsbudget.[Indtægtsbudget],0) - ISNULL(Sagsbudget.[Omkostningsbudget],0))/NULLIF(Sagsbudget.[Indtægtsbudget],0),0) >= 1
THEN (ISNULL(Sagsbudget.[Indtægtsbudget],0))
ELSE
CASE
WHEN ((ISNULL(Sagsposter.[Bogført omkostning],0))/NULLIF((1-ISNULL((ISNULL(Sagsbudget.[Indtægtsbudget],0) - ISNULL(Sagsbudget.[Omkostningsbudget],0))/NULLIF((Sagsbudget.[Indtægtsbudget]),0),0)), 0)) > (ISNULL(Sagsbudget.[Indtægtsbudget],0))
THEN (ISNULL(Sagsbudget.[Indtægtsbudget],0))
ELSE ((ISNULL(Sagsposter.[Bogført omkostning],0))/NULLIF((1-ISNULL((ISNULL(Sagsbudget.[Indtægtsbudget],0) - ISNULL(Sagsbudget.[Omkostningsbudget],0))/NULLIF((Sagsbudget.[Indtægtsbudget]),0),0)), 0))
END
END) - (ISNULL(Sagsposter.[Bogført omkostning],0)) AS 'Beregnet DB'
,(ISNULL(Arbejdssedler.[Antal],0)) AS 'Antal ikke lukkede arbejdssedler på sagen'
FROM Sagsopgaver
Left JOIN Sagsposter
ON  Sagsopgaver.[Job No_] = Sagsposter.[Job No_]
INNER JOIN Sager
ON Sager.[No_]=Sagsopgaver.[Job No_]
LEFT JOIN [NRGIDW_Extract].[elcon].[Customer] AS Kunder
ON Kunder.[No_]=Sager.[Bill-to Customer No_]
LEFT JOIN [NRGIDW_Extract].[elcon].[Resource] AS Medarbejdere
ON Medarbejdere.[No_]=Sager.[Person Responsible]
LEFT JOIN Sagsbudget
ON Sagsopgaver.[Job No_] = Sagsbudget.[Job No_]
Left JOIN Arbejdssedler
ON Arbejdssedler.[Source No_] = Sagsopgaver.[Job No_]
WHERE 1=1
AND (CASE WHEN ISNULL(Sagsbudget.[Indtægtsbudget],0) = 0 THEN 0 ELSE 1 END +
CASE WHEN ISNULL(Sagsbudget.[Omkostningsbudget],0) = 0 THEN 0 ELSE 1 END +
CASE WHEN ISNULL(Sagsposter.[Bogført omkostning],0) = 0 THEN 0 ELSE 1 END +
CASE WHEN ISNULL(Sagsposter.[Faktureret indtægt],0) = 0 THEN 0 ELSE 1 END) <> 0
AND Sagsposter.[Dato] <> ''
")
dbFetch(query, n = 10)
dfData <- dbFetch(query, n = 10)
dbClearResult(query)
query
dfData
View(dfData)
sQuery <- "
;WITH Sager AS (
SELECT *
From [NRGIDW_Extract].[elcon].[Job] AS Sager
WHERE 1=1
AND Sager.[Status] IN (2,3)
AND Sager.[Job Posting Group] IN ('FASTPRIS','PROJEKT', 'TBL', 'REGNING')),
Sagsopgaver AS(
SELECT
Sagsopgaver.[Global Dimension 1 Code]
,Sagsopgaver.[Job No_]
,Sagsopgaver.[Job Task No_]
,Sagsopgaver.[Description]
FROM [NRGIDW_Extract].[elcon].[Job Task] AS Sagsopgaver
INNER JOIN Sager
On Sager.[No_] = Sagsopgaver.[Job No_]
WHERE 1=1),
Sagsbudget AS(
SELECT
Sagsopgaver.[Job No_]
,SUM(CASE Sagsbudget.[Line Type] WHEN 1 THEN Sagsbudget.[Line Amount (LCY)] WHEN 2 THEN [Line Amount (LCY)] ELSE 0 END) AS 'Indtægtsbudget'
,SUM(CASE Sagsbudget.[Line Type] WHEN 0 THEN Sagsbudget.[Total Cost (LCY)] WHEN 2 THEN [Total Cost (LCY)] ELSE 0 END) AS 'Omkostningsbudget'
FROM [NRGIDW_Extract].[elcon].[Job Planning Line Entry] AS Sagsbudget
Inner JOIN Sagsopgaver
ON CONCAT(Sagsbudget.[Job No_],Sagsbudget.[Job Task No_]) = CONCAT(Sagsopgaver.[Job No_],Sagsopgaver.[Job Task No_])
INNER JOIN Sager
ON Sager.[No_]=Sagsbudget.[Job No_]
GROUP BY
Sagsopgaver.[Job No_]),
Arbejdssedler AS(
SELECT
Arbejdssedler.[Source No_]
,Count(Arbejdssedler.[Source No_]) AS Antal
FROM [NRGIDW_Extract].[elcon].[Work Order Header] AS Arbejdssedler
INNER JOIN Sager
ON Sager.[No_] = Arbejdssedler.[Source No_]
WHERE 1=1
AND (NOT(Arbejdssedler.[Status] = 3) OR Arbejdssedler.[Status] IS NULL)
GROUP BY Arbejdssedler.[Source No_]),
Sagsposter AS(
SELECT
CAST(Sagsposter.[Posting Date] as date) AS 'Dato'
,FORMAT(Sagsposter.[Posting Date], 'MM') AS 'Måned'
,FORMAT(Sagsposter.[Posting Date], 'MM-yyyy') AS 'Måned-år'
,FORMAT(Sagsposter.[Posting Date], 'yyyy') AS 'År'
,Sagsposter.[Global Dimension 1 Code] AS 'Afd'
,Sagsposter.[Job No_]
,-SUM(CASE Sagsposter.[Entry Type] WHEN 1 THEN Sagsposter.[Line Amount (LCY)] ELSE 0 END) AS 'Faktureret indtægt'
,SUM(CASE Sagsposter.[Entry Type] WHEN 0 THEN Sagsposter.[Total Cost (LCY)] ELSE 0 END) AS 'Bogført omkostning'
,SUM(CASE Sagsposter.[Entry Type] WHEN 0 THEN CASE Sagsposter.[Type] WHEN 0 THEN Sagsposter.[Total Cost (LCY)] ELSE 0 END ELSE 0 END) AS 'Ressource omkostning'
,SUM(CASE Sagsposter.[Entry Type] WHEN 0 THEN CASE Sagsposter.[Type] WHEN 1 THEN Sagsposter.[Total Cost (LCY)] ELSE 0 END ELSE 0 END) AS 'Vare omkostning'
,SUM(CASE Sagsposter.[Entry Type] WHEN 0 THEN CASE Sagsposter.[Type] WHEN 2 THEN Sagsposter.[Total Cost (LCY)] ELSE 0 END ELSE 0 END) AS  'Andre omkostning'
,MAX(Sagsposter.[Posting Date]) AS 'Seneste bogføringsdato'
FROM [NRGIDW_Extract].[elcon].[Job Ledger Entry] AS Sagsposter
INNER JOIN Sagsopgaver
ON CONCAT(Sagsposter.[Job No_],Sagsposter.[Job Task No_]) = CONCAT(Sagsopgaver.[Job No_],Sagsopgaver.[Job Task No_])
INNER JOIN Sager
ON Sager.[No_]=Sagsposter.[Job No_]
WHERE 1=1
AND Year(Sagsposter.[Posting Date]) >= 2018
GROUP BY
Sagsposter.[Global Dimension 1 Code],
Sagsposter.[Job No_],
Sagsposter.[Posting Date],
Sagsposter.[Entry Type]
)
SELECT DISTINCT
Sagsposter.[Dato]
,Sagsposter.[Måned]
,Sagsposter.[Måned-år]
,Sagsposter.[År]
,Sager.[Job Posting Group] AS 'Sagsbogføringsgruppe'
,Sagsposter.[Afd]
,Sager.[No_] AS 'Sagsnr.'
,CASE Sager.[Status] WHEN 2 THEN 'Igangværende' ELSE 'Afsluttet' END AS 'Status'
,Sager.[Description] AS 'Beskrivelse'
,Kunder.[No_] AS 'Kundenummer'
,Kunder.[Name] AS 'Kundenavn'
,CONCAT(Sager.[Ship-to Address],' ',Sager.[Ship-to Post Code],' ',Sager.[Ship-to City]) AS 'Leveringsadresse'
,Sager.[Ship-to Post Code] AS 'Postnummer'
,Medarbejdere.[Name] AS 'Ansvarlig'
,(ISNULL(Sagsbudget.[Indtægtsbudget],0)) AS 'Slut-vurdering indtægt'
,(ISNULL(Sagsbudget.[Omkostningsbudget],0)) AS 'Slut-vurdering omkostninger'
,((ISNULL(Sagsbudget.[Indtægtsbudget],0)) - (ISNULL(Sagsbudget.[Omkostningsbudget],0))) AS 'Slut-vurdering DB'
,(ISNULL(Sagsposter.[Faktureret indtægt],0)) AS 'Faktureret indtægt'
,(ISNULL(Sagsposter.[Bogført omkostning],0)) 'Bogførte omkostninger'
,(ISNULL(Sagsposter.[Ressource omkostning],0)) AS 'Ressourceomkostninger'
,(ISNULL(Sagsposter.[Vare omkostning],0)) AS 'Vareomkostninger'
,(ISNULL(Sagsposter.[Andre omkostning],0)) AS  'Andre omkostninger'
,(ISNULL(Sagsposter.[Faktureret indtægt],0)) - (ISNULL(Sagsposter.[Bogført omkostning],0)) AS 'Dækningsbidrag'
,(ISNULL(Sagsbudget.[Indtægtsbudget],0) - ISNULL(Sagsposter.[Faktureret indtægt],0)) AS 'Budget - faktureret'
,(CASE
WHEN
((ISNULL(Sagsposter.[Bogført omkostning],0)) = 0 AND (ISNULL(Sagsbudget.[Omkostningsbudget],0)) = 0)
OR ISNULL((ISNULL(Sagsbudget.[Indtægtsbudget],0) - ISNULL(Sagsbudget.[Omkostningsbudget],0))/NULLIF((Sagsbudget.[Indtægtsbudget]),0),0) >= 1
THEN (ISNULL(Sagsbudget.[Indtægtsbudget],0))
ELSE
CASE
WHEN ((ISNULL(Sagsposter.[Bogført omkostning],0))/NULLIF((1-ISNULL((ISNULL(Sagsbudget.[Indtægtsbudget],0) - ISNULL(Sagsbudget.[Omkostningsbudget],0))/NULLIF((Sagsbudget.[Indtægtsbudget]),0),0)), 0)) > (ISNULL(Sagsbudget.[Indtægtsbudget],0))
THEN (ISNULL(Sagsbudget.[Indtægtsbudget],0))
ELSE ((ISNULL(Sagsposter.[Bogført omkostning],0))/NULLIF((1-ISNULL((ISNULL(Sagsbudget.[Indtægtsbudget],0) - ISNULL(Sagsbudget.[Omkostningsbudget],0))/NULLIF((Sagsbudget.[Indtægtsbudget]),0),0)), 0))
END
END) AS 'Beregnet indtægt'
,(CASE
WHEN
(Sagsposter.[Bogført omkostning] = 0 AND Sagsbudget.[Omkostningsbudget] = 0)
OR ISNULL((ISNULL(Sagsbudget.[Indtægtsbudget],0) - ISNULL(Sagsbudget.[Omkostningsbudget],0))/NULLIF(Sagsbudget.[Indtægtsbudget],0),0) >= 1
THEN (ISNULL(Sagsbudget.[Indtægtsbudget],0))
ELSE
CASE
WHEN ((ISNULL(Sagsposter.[Bogført omkostning],0))/NULLIF((1-ISNULL((ISNULL(Sagsbudget.[Indtægtsbudget],0) - ISNULL(Sagsbudget.[Omkostningsbudget],0))/NULLIF((Sagsbudget.[Indtægtsbudget]),0),0)), 0)) > (ISNULL(Sagsbudget.[Indtægtsbudget],0))
THEN (ISNULL(Sagsbudget.[Indtægtsbudget],0))
ELSE ((ISNULL(Sagsposter.[Bogført omkostning],0))/NULLIF((1-ISNULL((ISNULL(Sagsbudget.[Indtægtsbudget],0) - ISNULL(Sagsbudget.[Omkostningsbudget],0))/NULLIF((Sagsbudget.[Indtægtsbudget]),0),0)), 0))
END
END) - (ISNULL(Sagsposter.[Bogført omkostning],0)) AS 'Beregnet DB'
,(ISNULL(Arbejdssedler.[Antal],0)) AS 'Antal ikke lukkede arbejdssedler på sagen'
FROM Sagsopgaver
Left JOIN Sagsposter
ON  Sagsopgaver.[Job No_] = Sagsposter.[Job No_]
INNER JOIN Sager
ON Sager.[No_]=Sagsopgaver.[Job No_]
LEFT JOIN [NRGIDW_Extract].[elcon].[Customer] AS Kunder
ON Kunder.[No_]=Sager.[Bill-to Customer No_]
LEFT JOIN [NRGIDW_Extract].[elcon].[Resource] AS Medarbejdere
ON Medarbejdere.[No_]=Sager.[Person Responsible]
LEFT JOIN Sagsbudget
ON Sagsopgaver.[Job No_] = Sagsbudget.[Job No_]
Left JOIN Arbejdssedler
ON Arbejdssedler.[Source No_] = Sagsopgaver.[Job No_]
WHERE 1=1
AND (CASE WHEN ISNULL(Sagsbudget.[Indtægtsbudget],0) = 0 THEN 0 ELSE 1 END +
CASE WHEN ISNULL(Sagsbudget.[Omkostningsbudget],0) = 0 THEN 0 ELSE 1 END +
CASE WHEN ISNULL(Sagsposter.[Bogført omkostning],0) = 0 THEN 0 ELSE 1 END +
CASE WHEN ISNULL(Sagsposter.[Faktureret indtægt],0) = 0 THEN 0 ELSE 1 END) <> 0
AND Sagsposter.[Dato] <> ''
"
sQuery <- "
SET NOCOUNT ON;
DECLARE @startdate DATETIME
DECLARE @enddate DATETIME
DECLARE @date DATETIME
DECLARE @count INT
DECLARE @jobno CHAR(20)
DECLARE @afd TABLE (Value INT)
INSERT INTO @afd VALUES (421)
INSERT INTO @afd VALUES (505)
INSERT INTO @afd VALUES (515)
SET @startdate = '2017-01-01'
SET @enddate = '2022-12-31'
SET @jobno = ''
;WITH Sager AS (
SELECT *
From [NRGIDW_Extract].[elcon].[Job] AS Sager
WHERE 1=1
AND Sager.No_ = @jobno OR Coalesce(@jobno,'') = ''
AND Sager.[Status] = 2
AND (Sager.[Job Posting Group] = 'FASTPRIS' OR Sager.[Job Posting Group] = 'PROJEKT')),
Sagsopgaver AS(
SELECT
Sagsopgaver.[Global Dimension 1 Code]
,Sagsopgaver.[Job No_]
,Sagsopgaver.[Job Task No_]
,Sagsopgaver.[Description]
FROM [NRGIDW_Extract].[elcon].[Job Task] AS Sagsopgaver
INNER JOIN Sager
On Sager.[No_] = Sagsopgaver.[Job No_]
WHERE 1=1
AND Sagsopgaver.[Global Dimension 1 Code] IN (SELECT Value FROM @afd)),
Sagsbudget AS(
SELECT
Sagsopgaver.[Job No_]
,SUM(CASE Sagsbudget.[Line Type] WHEN 1 THEN Sagsbudget.[Line Amount (LCY)] WHEN 2 THEN [Line Amount (LCY)] ELSE 0 END) AS 'Indtægtsbudget'
,SUM(CASE Sagsbudget.[Line Type] WHEN 0 THEN Sagsbudget.[Total Cost (LCY)] WHEN 2 THEN [Total Cost (LCY)] ELSE 0 END) AS 'Omkostningsbudget'
FROM [NRGIDW_Extract].[elcon].[Job Planning Line Entry] AS Sagsbudget
Inner JOIN Sagsopgaver
ON CONCAT(Sagsbudget.[Job No_],Sagsbudget.[Job Task No_]) = CONCAT(Sagsopgaver.[Job No_],Sagsopgaver.[Job Task No_])
INNER JOIN Sager
ON Sager.[No_]=Sagsbudget.[Job No_]
GROUP BY
Sagsopgaver.[Job No_]),
Arbejdssedler AS(
SELECT
Arbejdssedler.[Source No_]
,Count(Arbejdssedler.[Source No_]) AS Antal
FROM [NRGIDW_Extract].[elcon].[Work Order Header] AS Arbejdssedler
INNER JOIN Sager
ON Sager.[No_] = Arbejdssedler.[Source No_]
WHERE 1=1
AND (NOT(Arbejdssedler.[Status] = 3) OR Arbejdssedler.[Status] IS NULL)
GROUP BY Arbejdssedler.[Source No_]),
Sagsposter AS(
SELECT
FORMAT(Sagsposter.[Posting Date],'dd-MM-yyyy') AS 'Dato'
,Datepart(iso_week,Sagsposter.[Posting Date]) AS 'Uge'
,CONCAT(Datepart(iso_week,Sagsposter.[Posting Date]),'-',FORMAT(Sagsposter.[Posting Date], 'yyyy')) AS 'Uge-år'
,FORMAT(Sagsposter.[Posting Date], 'MM-yyyy') AS 'Måned-år'
,FORMAT(Sagsposter.[Posting Date], 'yyyy') AS 'År'
,Sagsposter.[Global Dimension 1 Code] AS 'Afd'
,Sagsposter.[Job No_]
,-SUM(CASE Sagsposter.[Entry Type] WHEN 1 THEN Sagsposter.[Line Amount (LCY)] ELSE 0 END) AS 'Faktureret indtægt'
,SUM(CASE Sagsposter.[Entry Type] WHEN 0 THEN Sagsposter.[Total Cost (LCY)] ELSE 0 END) AS 'Bogført omkostning'
,SUM(CASE Sagsposter.[Entry Type] WHEN 0 THEN CASE Sagsposter.[Type] WHEN 0 THEN Sagsposter.[Total Cost (LCY)] ELSE 0 END ELSE 0 END) AS 'Ressource omkostning'
,SUM(CASE Sagsposter.[Entry Type] WHEN 0 THEN CASE Sagsposter.[Type] WHEN 1 THEN Sagsposter.[Total Cost (LCY)] ELSE 0 END ELSE 0 END) AS 'Vare omkostning'
,SUM(CASE Sagsposter.[Entry Type] WHEN 0 THEN CASE Sagsposter.[Type] WHEN 2 THEN Sagsposter.[Total Cost (LCY)] ELSE 0 END ELSE 0 END) AS  'Andre omkostning'
,MAX(Sagsposter.[Posting Date]) AS 'Seneste bogføringsdato'
,-SUM(CASE Sagsposter.[Entry Type] WHEN 1 THEN CASE Format(Sagsposter.[Posting Date],'yyyy-MM') WHEN FORMAT(@startdate,'yyyy-MM')THEN
Sagsposter.[Line Amount (LCY)] ELSE 0 END ELSE 0 END) AS 'Faktureret i måneden'
,SUM(CASE Sagsposter.[Entry Type] WHEN 0 THEN CASE Format(Sagsposter.[Posting Date],'yyyy-MM') WHEN FORMAT(@startdate,'yyyy-MM')THEN
Sagsposter.[Total Cost (LCY)] ELSE 0 END ELSE 0 END) AS 'Forbrug i måneden'
FROM [NRGIDW_Extract].[elcon].[Job Ledger Entry] AS Sagsposter
INNER JOIN Sagsopgaver
ON CONCAT(Sagsposter.[Job No_],Sagsposter.[Job Task No_]) = CONCAT(Sagsopgaver.[Job No_],Sagsopgaver.[Job Task No_])
INNER JOIN Sager
ON Sager.[No_]=Sagsposter.[Job No_]
WHERE 1=1
AND Sagsposter.[Posting Date] BETWEEN @startdate AND @enddate
GROUP BY
Sagsposter.[Global Dimension 1 Code],
Sagsposter.[Job No_],
Sagsposter.[Posting Date]
)
SELECT DISTINCT
Sagsposter.[Dato]
,Sagsposter.[Uge]
,Sagsposter.[Måned-år]
,Sagsposter.[År]
,Sager.[Job Posting Group] AS 'Sagsbogføringsgruppe'
,Sagsposter.[Afd]
,Sager.[No_] AS 'Sagsnr.'
,Sager.[Description] AS 'Beskrivelse'
,Kunder.[Name] AS 'Kundenavn'
--,CONCAT(Sager.[Ship-to Address],' ',Sager.[Ship-to Post Code],' ',Sager.[Ship-to City]) AS Leveringsadresse
--,Medarbejdere.[Name] AS Ansvarlig
,ISNULL(Sagsbudget.[Indtægtsbudget],0) AS 'Slut vurdering indtægt'
,ISNULL(Sagsbudget.[Omkostningsbudget],0) AS 'Slut vurdering omkostning'
,ISNULL(Sagsbudget.[Indtægtsbudget],0) - ISNULL(Sagsbudget.[Omkostningsbudget],0) AS 'Slut vurdering DB'
,ISNULL(Sagsposter.[Faktureret indtægt],0) AS 'Faktureret indtægt'
,ISNULL(Sagsposter.[Bogført omkostning],0) 'Bogført omkostning'
,ISNULL(Sagsposter.[Ressource omkostning],0) AS 'Ressource omkostning'
,ISNULL(Sagsposter.[Vare omkostning],0) AS 'Vare omkostning'
,ISNULL(Sagsposter.[Andre omkostning],0) AS  'Andre omkostning'
--,ISNULL(Arbejdssedler.[Antal],0) AS 'Antal ikke lukkede arbejdssedler på sagen'
FROM Sagsopgaver
LEFT JOIN [NRGIDW_Extract].[elcon].[DynamicsNavHyperlink] AS Link
ON Link.[Sagsnummer]=Sagsopgaver.[Job No_]
Left JOIN Sagsposter
ON  Sagsopgaver.[Job No_] = Sagsposter.[Job No_]
INNER JOIN Sager
ON Sager.[No_]=Sagsopgaver.[Job No_]
LEFT JOIN [NRGIDW_Extract].[elcon].[Customer] AS Kunder
ON Kunder.[No_]=Sager.[Bill-to Customer No_]
LEFT JOIN [NRGIDW_Extract].[elcon].[Resource] AS Medarbejdere
ON Medarbejdere.[No_]=Sager.[Person Responsible]
LEFT JOIN Sagsbudget
ON Sagsopgaver.[Job No_] = Sagsbudget.[Job No_]
Left JOIN Arbejdssedler
ON Arbejdssedler.[Source No_] = Sagsopgaver.[Job No_]
WHERE 1=1
AND (CASE WHEN ISNULL(Sagsbudget.[Indtægtsbudget],0) = 0 THEN 0 ELSE 1 END +
CASE WHEN ISNULL(Sagsbudget.[Omkostningsbudget],0) = 0 THEN 0 ELSE 1 END +
CASE WHEN ISNULL(Sagsposter.[Bogført omkostning],0) = 0 THEN 0 ELSE 1 END +
CASE WHEN ISNULL(Sagsposter.[Faktureret indtægt],0) = 0 THEN 0 ELSE 1 END) <> 0
ORDER BY [Afd],[Sagsnr.],[Dato]
"
query <- dbSendQuery(con,sQuery)
dfData <- dbFetch(query, n = 100)
dbClearResult(query)
summary(dfData)
sQuery <- "
;WITH Sager AS (
SELECT *
From [NRGIDW_Extract].[elcon].[Job] AS Sager
WHERE 1=1
AND Sager.[Status] IN (2,3)
AND Sager.[Global Dimension 1 Code] IN ('515','505')
AND Sager.[Job Posting Group] IN ('FASTPRIS','PROJEKT')),
Sagsopgaver AS(
SELECT
Sagsopgaver.[Global Dimension 1 Code]
,Sagsopgaver.[Job No_]
,Sagsopgaver.[Job Task No_]
,Sagsopgaver.[Description]
FROM [NRGIDW_Extract].[elcon].[Job Task] AS Sagsopgaver
INNER JOIN Sager
On Sager.[No_] = Sagsopgaver.[Job No_]
WHERE 1=1),
Sagsbudget AS(
SELECT
Sagsopgaver.[Job No_]
,SUM(CASE Sagsbudget.[Line Type] WHEN 1 THEN Sagsbudget.[Line Amount (LCY)] WHEN 2 THEN [Line Amount (LCY)] ELSE 0 END) AS 'Indtægtsbudget'
,SUM(CASE Sagsbudget.[Line Type] WHEN 0 THEN Sagsbudget.[Total Cost (LCY)] WHEN 2 THEN [Total Cost (LCY)] ELSE 0 END) AS 'Omkostningsbudget'
FROM [NRGIDW_Extract].[elcon].[Job Planning Line Entry] AS Sagsbudget
Inner JOIN Sagsopgaver
ON CONCAT(Sagsbudget.[Job No_],Sagsbudget.[Job Task No_]) = CONCAT(Sagsopgaver.[Job No_],Sagsopgaver.[Job Task No_])
INNER JOIN Sager
ON Sager.[No_]=Sagsbudget.[Job No_]
GROUP BY
Sagsopgaver.[Job No_]),
Arbejdssedler AS(
SELECT
Arbejdssedler.[Source No_]
,Count(Arbejdssedler.[Source No_]) AS Antal
FROM [NRGIDW_Extract].[elcon].[Work Order Header] AS Arbejdssedler
INNER JOIN Sager
ON Sager.[No_] = Arbejdssedler.[Source No_]
WHERE 1=1
AND (NOT(Arbejdssedler.[Status] = 3) OR Arbejdssedler.[Status] IS NULL)
GROUP BY Arbejdssedler.[Source No_]),
Sagsposter AS(
SELECT
CAST(Sagsposter.[Posting Date] as date) AS 'Dato'
,FORMAT(Sagsposter.[Posting Date], 'MM') AS 'Måned'
,FORMAT(Sagsposter.[Posting Date], 'MM-yyyy') AS 'Måned-år'
,FORMAT(Sagsposter.[Posting Date], 'yyyy') AS 'År'
,Sagsposter.[Global Dimension 1 Code] AS 'Afd'
,Sagsposter.[Job No_]
,-SUM(CASE Sagsposter.[Entry Type] WHEN 1 THEN Sagsposter.[Line Amount (LCY)] ELSE 0 END) AS 'Faktureret indtægt'
,SUM(CASE Sagsposter.[Entry Type] WHEN 0 THEN Sagsposter.[Total Cost (LCY)] ELSE 0 END) AS 'Bogført omkostning'
,SUM(CASE Sagsposter.[Entry Type] WHEN 0 THEN CASE Sagsposter.[Type] WHEN 0 THEN Sagsposter.[Total Cost (LCY)] ELSE 0 END ELSE 0 END) AS 'Ressource omkostning'
,SUM(CASE Sagsposter.[Entry Type] WHEN 0 THEN CASE Sagsposter.[Type] WHEN 1 THEN Sagsposter.[Total Cost (LCY)] ELSE 0 END ELSE 0 END) AS 'Vare omkostning'
,SUM(CASE Sagsposter.[Entry Type] WHEN 0 THEN CASE Sagsposter.[Type] WHEN 2 THEN Sagsposter.[Total Cost (LCY)] ELSE 0 END ELSE 0 END) AS  'Andre omkostning'
,MAX(Sagsposter.[Posting Date]) AS 'Seneste bogføringsdato'
FROM [NRGIDW_Extract].[elcon].[Job Ledger Entry] AS Sagsposter
INNER JOIN Sagsopgaver
ON CONCAT(Sagsposter.[Job No_],Sagsposter.[Job Task No_]) = CONCAT(Sagsopgaver.[Job No_],Sagsopgaver.[Job Task No_])
INNER JOIN Sager
ON Sager.[No_]=Sagsposter.[Job No_]
WHERE 1=1
AND Year(Sagsposter.[Posting Date]) >= 2018
GROUP BY
Sagsposter.[Global Dimension 1 Code],
Sagsposter.[Job No_],
Sagsposter.[Posting Date],
Sagsposter.[Entry Type]
)
SELECT DISTINCT
Sagsposter.[Dato]
,Sagsposter.[Måned]
,Sagsposter.[Måned-år]
,Sagsposter.[År]
,Sager.[Job Posting Group] AS 'Sagsbogføringsgruppe'
,Sagsposter.[Afd]
,Sager.[No_] AS 'Sagsnr.'
,CASE Sager.[Status] WHEN 2 THEN 'Igangværende' ELSE 'Afsluttet' END AS 'Status'
,Sager.[Description] AS 'Beskrivelse'
,Kunder.[No_] AS 'Kundenummer'
,Kunder.[Name] AS 'Kundenavn'
,CONCAT(Sager.[Ship-to Address],' ',Sager.[Ship-to Post Code],' ',Sager.[Ship-to City]) AS 'Leveringsadresse'
,Sager.[Ship-to Post Code] AS 'Postnummer'
,Medarbejdere.[Name] AS 'Ansvarlig'
,(ISNULL(Sagsbudget.[Indtægtsbudget],0)) AS 'Slut-vurdering indtægt'
,(ISNULL(Sagsbudget.[Omkostningsbudget],0)) AS 'Slut-vurdering omkostninger'
,((ISNULL(Sagsbudget.[Indtægtsbudget],0)) - (ISNULL(Sagsbudget.[Omkostningsbudget],0))) AS 'Slut-vurdering DB'
,(ISNULL(Sagsposter.[Faktureret indtægt],0)) AS 'Faktureret indtægt'
,(ISNULL(Sagsposter.[Bogført omkostning],0)) 'Bogførte omkostninger'
,(ISNULL(Sagsposter.[Ressource omkostning],0)) AS 'Ressourceomkostninger'
,(ISNULL(Sagsposter.[Vare omkostning],0)) AS 'Vareomkostninger'
,(ISNULL(Sagsposter.[Andre omkostning],0)) AS  'Andre omkostninger'
,(ISNULL(Sagsposter.[Faktureret indtægt],0)) - (ISNULL(Sagsposter.[Bogført omkostning],0)) AS 'Dækningsbidrag'
,(ISNULL(Sagsbudget.[Indtægtsbudget],0) - ISNULL(Sagsposter.[Faktureret indtægt],0)) AS 'Budget - faktureret'
,(CASE
WHEN
((ISNULL(Sagsposter.[Bogført omkostning],0)) = 0 AND (ISNULL(Sagsbudget.[Omkostningsbudget],0)) = 0)
OR ISNULL((ISNULL(Sagsbudget.[Indtægtsbudget],0) - ISNULL(Sagsbudget.[Omkostningsbudget],0))/NULLIF((Sagsbudget.[Indtægtsbudget]),0),0) >= 1
THEN (ISNULL(Sagsbudget.[Indtægtsbudget],0))
ELSE
CASE
WHEN ((ISNULL(Sagsposter.[Bogført omkostning],0))/NULLIF((1-ISNULL((ISNULL(Sagsbudget.[Indtægtsbudget],0) - ISNULL(Sagsbudget.[Omkostningsbudget],0))/NULLIF((Sagsbudget.[Indtægtsbudget]),0),0)), 0)) > (ISNULL(Sagsbudget.[Indtægtsbudget],0))
THEN (ISNULL(Sagsbudget.[Indtægtsbudget],0))
ELSE ((ISNULL(Sagsposter.[Bogført omkostning],0))/NULLIF((1-ISNULL((ISNULL(Sagsbudget.[Indtægtsbudget],0) - ISNULL(Sagsbudget.[Omkostningsbudget],0))/NULLIF((Sagsbudget.[Indtægtsbudget]),0),0)), 0))
END
END) AS 'Beregnet indtægt'
,(CASE
WHEN
(Sagsposter.[Bogført omkostning] = 0 AND Sagsbudget.[Omkostningsbudget] = 0)
OR ISNULL((ISNULL(Sagsbudget.[Indtægtsbudget],0) - ISNULL(Sagsbudget.[Omkostningsbudget],0))/NULLIF(Sagsbudget.[Indtægtsbudget],0),0) >= 1
THEN (ISNULL(Sagsbudget.[Indtægtsbudget],0))
ELSE
CASE
WHEN ((ISNULL(Sagsposter.[Bogført omkostning],0))/NULLIF((1-ISNULL((ISNULL(Sagsbudget.[Indtægtsbudget],0) - ISNULL(Sagsbudget.[Omkostningsbudget],0))/NULLIF((Sagsbudget.[Indtægtsbudget]),0),0)), 0)) > (ISNULL(Sagsbudget.[Indtægtsbudget],0))
THEN (ISNULL(Sagsbudget.[Indtægtsbudget],0))
ELSE ((ISNULL(Sagsposter.[Bogført omkostning],0))/NULLIF((1-ISNULL((ISNULL(Sagsbudget.[Indtægtsbudget],0) - ISNULL(Sagsbudget.[Omkostningsbudget],0))/NULLIF((Sagsbudget.[Indtægtsbudget]),0),0)), 0))
END
END) - (ISNULL(Sagsposter.[Bogført omkostning],0)) AS 'Beregnet DB'
,(ISNULL(Arbejdssedler.[Antal],0)) AS 'Antal ikke lukkede arbejdssedler på sagen'
FROM Sagsopgaver
Left JOIN Sagsposter
ON  Sagsopgaver.[Job No_] = Sagsposter.[Job No_]
INNER JOIN Sager
ON Sager.[No_]=Sagsopgaver.[Job No_]
LEFT JOIN [NRGIDW_Extract].[elcon].[Customer] AS Kunder
ON Kunder.[No_]=Sager.[Bill-to Customer No_]
LEFT JOIN [NRGIDW_Extract].[elcon].[Resource] AS Medarbejdere
ON Medarbejdere.[No_]=Sager.[Person Responsible]
LEFT JOIN Sagsbudget
ON Sagsopgaver.[Job No_] = Sagsbudget.[Job No_]
Left JOIN Arbejdssedler
ON Arbejdssedler.[Source No_] = Sagsopgaver.[Job No_]
WHERE 1=1
AND (CASE WHEN ISNULL(Sagsbudget.[Indtægtsbudget],0) = 0 THEN 0 ELSE 1 END +
CASE WHEN ISNULL(Sagsbudget.[Omkostningsbudget],0) = 0 THEN 0 ELSE 1 END +
CASE WHEN ISNULL(Sagsposter.[Bogført omkostning],0) = 0 THEN 0 ELSE 1 END +
CASE WHEN ISNULL(Sagsposter.[Faktureret indtægt],0) = 0 THEN 0 ELSE 1 END) <> 0
AND Sagsposter.[Dato] <> ''
"
query <- dbSendQuery(con,sQuery)
dfData <- dbFetch(query)
dbClearResult(query)
summary(dfData)
dfData$Dato <- as.Date(dfData$Dato)
summary(dfData)
# Select random job number
set.seed(123)
sJobNo <- sample(dfData$Sagsnr.,1)
# Plot the margin
dfSample <- dfData |>
filter(Sagsnr. == sJobNo)
# Plot the margin
dfSample <- filter(dfData$Sagsnr. == sJobNo)
# Plot the margin
dfSample <- filter(dfData$Sagsnr. = sJobNo)
# Plot the margin
dfSample <- filter(dfData$Sagsnr. == sJobNo)
# Plot the margin
dfSample <- filter(dfData, Sagsnr. == sJobNo)
sJobNo
