library(DBI)
library(dplyr)
library(dbplyr)
library(odbc)
con <- DBI::dbConnect(odbc::odbc(),
Driver   = "[your driver's name]",
Server   = "sardubi02",
Database = "NRGIDW_Extract",
UID      ="NRGI\tobr",
PWD      = "Rebecca0607.",
Port     = 1433)
library(DBI)
library(dplyr)
library(dbplyr)
library(odbc)
con <- DBI::dbConnect(odbc::odbc(),
Server   = "sardubi02",
Database = "NRGIDW_Extract",
UID      ="NRGI\tobr",
PWD      = "Rebecca0607.",
Port     = 1433)
library(DBI)
library(dplyr)
library(dbplyr)
library(odbc)
con <- DBI::dbConnect(odbc::odbc(),
Driver   = "[your driver's name]",
Server   = "sardubi02",
Database = "NRGIDW_Extract",
UID      ="NRGI\tobr",
PWD      = "Rebecca0607.",
Port     = 1433)
library(DBI)
library(dplyr)
library(dbplyr)
library(odbc)
con <- DBI::dbConnect(odbc::odbc(),
Driver   = "SQL Server",
Server   = "sardubi02",
Database = "NRGIDW_Extract",
UID      ="NRGI\tobr",
PWD      = "Rebecca0607.",
Port     = 1433)
library(DBI)
library(dplyr)
library(dbplyr)
library(odbc)
con <- DBI::dbConnect(odbc::odbc(),
Driver   = "SQL Server",
Server   = "sardubi02",
Database = "NRGIDW_Extract",
UID      ="NRGI/tobr",
PWD      = "Rebecca0607.",
Port     = 1433)
library(DBI)
library(dplyr)
library(dbplyr)
library(odbc)
con <- DBI::dbConnect(odbc::odbc(),
Driver   = "ODBC Driver 17 for SQL Server",
Server   = "sardubi02",
Database = "NRGIDW_Extract",
UID      ="NRGI/tobr",
PWD      = "Rebecca0607.",
Port     = 1433)
devtools::install_github("krose/nordpoolspotr")
library(nordpoolspotr)
devtools::install_github("krose/nordpoolspotr")
devtools::install_github("krose/nordpoolspotr")
install.packages("devtools")
install.packages("devtools")
devtools::install_github("krose/nordpoolspotr")
source("R:\ØKONOMI\CONTROLLING\TOBR\Solcelleberegner\Nordpool\nordpoolspotr.R")
source("R:\OEKONOMI\CONTROLLING\TOBR\Solcelleberegner\Nordpool\nordpoolspotr.R")
source("R:/OEKONOMI/CONTROLLING/TOBR/Solcelleberegner/Nordpool/nordpoolspotr.R")
source("R:/OEKONOMI/CONTROLLING/TOBR/Solcelleberegner/Nordpool/")
source("R:/ØKONOMI/CONTROLLING/TOBR/Solcelleberegner/Nordpool/nordpoolspotr.R")
source("R:/ØKONOMI/CONTROLLING/TOBR/Solcelleberegner/Nordpool/nordpoolspotr.R")
# Get the Danish prices in DKK
np_prices(time_unit = "daily", currency = "DKK", areas = c("DK1", "DK2"))
source("R:/ØKONOMI/CONTROLLING/TOBR/Solcelleberegner/Nordpool/nordpoolspotr.R")
# Get the Danish prices in DKK
p <- np_prices(time_unit = "hourly", currency = "DKK", areas = c("DK1", "DK2"))
source("R:/ØKONOMI/CONTROLLING/TOBR/Solcelleberegner/Nordpool/nordpoolspotr.R")
source("R:/ØKONOMI/CONTROLLING/TOBR/Solcelleberegner/Nordpool/nordpoolspotr.R")
source("R:/ØKONOMI/CONTROLLING/TOBR/Solcelleberegner/Nordpool/nordpoolspotr.R")
# Get the Danish prices in DKK
p <- np_prices(time_unit = "hour", currency = "DKK", areas = c("DK1", "DK2"))
source("R:/ØKONOMI/CONTROLLING/TOBR/Solcelleberegner/Nordpool/nordpoolspotr.R")
# Get the Danish prices in DKK
p <- np_prices(time_unit = "daily", currency = "DKK", areas = c("DK1", "DK2"))
import from dplyr %<%
importfrom dplyr %>%
@importFrom dplyr %>%
importFrom dplyr %>%
source("R:/ØKONOMI/CONTROLLING/TOBR/Solcelleberegner/Nordpool/nordpoolspotr.R")
# Get the Danish prices in DKK
p <- np_prices(time_unit = "daily", currency = "DKK", areas = c("DK1", "DK2"))
install.packages("magrittr") # package installations are only needed the first time you use it
install.packages("dplyr")    # alternative installation of the %>%
library(magrittr) # needs to be run every time you start R and want to use %>%
library(dplyr)    # alternatively, this also loads %>%
install.packages("magrittr")
install.packages("dplyr")
library(magrittr) # needs to be run every time you start R and want to use %>%
library(dplyr)    # alternatively, this also loads %>%
library(dplyr)
source("R:/ØKONOMI/CONTROLLING/TOBR/Solcelleberegner/Nordpool/nordpoolspotr.R")
# Get the Danish prices in DKK
library(dplyr)
p <- np_prices(time_unit = "daily", currency = "DKK", areas = c("DK1", "DK2"))
source("R:/ØKONOMI/CONTROLLING/TOBR/Solcelleberegner/Nordpool/nordpoolspotr.R")
# Get the Danish prices in DKK
library(dplyr)
p <- np_prices(time_unit = "monthly", currency = "DKK", areas = c("DK1", "DK2"))
source("R:/ØKONOMI/CONTROLLING/TOBR/Solcelleberegner/Nordpool/nordpoolspotr.R")
# Get the Danish prices in DKK
library(dplyr)
p <- np_prices(time_unit = "daily", currency = "DKK", areas = c("DK1", "DK2"))
source("R:/ØKONOMI/CONTROLLING/TOBR/Solcelleberegner/Nordpool/nordpoolspotr.R")
# Get the Danish prices in DKK
library(dplyr)
p <- np_prices(time_unit = "daily", currency = "DKK", areas = c("DK1", "DK2"))
plot(p$DK1)
source("R:/ØKONOMI/CONTROLLING/TOBR/Solcelleberegner/Nordpool/nordpoolspotr.R")
# Get the Danish prices in DKK
library(dplyr)
p <- np_prices(time_unit = "daily", currency = "DKK", areas = c("DK1", "DK2"))
plot(p$DK1,type='l')
source("R:/ØKONOMI/CONTROLLING/TOBR/Solcelleberegner/Nordpool/nordpoolspotr.R")
# Get the Danish prices in DKK
library(dplyr)
p <- np_prices(time_unit = "daily", currency = "DKK", areas = c("DK1", "DK2"))
plot(c(p$DK1,p$DK2),type='l')
source("R:/ØKONOMI/CONTROLLING/TOBR/Solcelleberegner/Nordpool/nordpoolspotr.R")
# Get the Danish prices in DKK
library(dplyr)
p <- np_prices(time_unit = "daily", currency = "DKK", areas = c("DK1", "DK2"))
plot(p$DK1,p$DK2,type='l')
source("R:/ØKONOMI/CONTROLLING/TOBR/Solcelleberegner/Nordpool/nordpoolspotr.R")
# Get the Danish prices in DKK
library(dplyr)
p <- np_prices(time_unit = "daily", currency = "DKK", areas = c("DK1", "DK2"))
plot(p$DK1,type='l')
source("R:/ØKONOMI/CONTROLLING/TOBR/Solcelleberegner/Nordpool/nordpoolspotr.R")
library(dplyr)
# Get the Danish prices in DKK
p <- np_prices(time_unit = "daily", currency = "DKK", areas = c("DK1", "DK2"))
plot(p$DK1,p$StartTime,type='l')
source("R:/ØKONOMI/CONTROLLING/TOBR/Solcelleberegner/Nordpool/nordpoolspotr.R")
library(dplyr)
# Get the Danish prices in DKK
p <- np_prices(time_unit = "daily", currency = "DKK", areas = c("DK1", "DK2"))
plot(p$StartTime,p$DK1,type='l')
source("R:/ØKONOMI/CONTROLLING/TOBR/Solcelleberegner/Nordpool/nordpoolspotr.R")
library(dplyr)
# Get the Danish prices in DKK
p <- np_prices(time_unit = "hourly", currency = "DKK", areas = c("DK1", "DK2"))
plot(p$StartTime,p$DK1,type='l')
source("R:/ØKONOMI/CONTROLLING/TOBR/Solcelleberegner/Nordpool/nordpoolspotr.R")
library(dplyr)
# Get the Danish prices in DKK
p <- np_prices(time_unit = "monthly", currency = "DKK", areas = c("DK1", "DK2"))
source("R:/ØKONOMI/CONTROLLING/TOBR/Solcelleberegner/Nordpool/nordpoolspotr.R")
library(dplyr)
# Get the Danish prices in DKK
p <- np_prices(time_unit = "daily", currency = "DKK", areas = c("DK1", "DK2"))
plot(p$StartTime,p$DK1,type='l')
source("R:/ØKONOMI/CONTROLLING/TOBR/Solcelleberegner/Nordpool/nordpoolspotr.R")
library(dplyr)
# Get the Danish prices in DKK
p <- np_prices(time_unit = "daily", currency = "DKK", areas = c("DK1", "DK2"))
plot(p$StartTime,p$DK1,type='l')
# function for indexing:
index_function <- function(x){
# input: x, a vector
# output: x_indexed, a vector
initial <- x[1]
x_indexed <- map_dbl(x, function(x){x/initial * 100})
return(x_indexed)
}
plot(p$StartTime,index_function(p$DK1),type='l')
source("R:/ØKONOMI/CONTROLLING/TOBR/Solcelleberegner/Nordpool/nordpoolspotr.R")
library(dplyr)
library(purrr)
# Get the Danish prices in DKK
p <- np_prices(time_unit = "daily", currency = "DKK", areas = c("DK1", "DK2"))
plot(p$StartTime,p$DK1,type='l')
# function for indexing:
index_function <- function(x){
# input: x, a vector
# output: x_indexed, a vector
initial <- x[1]
x_indexed <- map_dbl(x, function(x){x/initial * 100})
return(x_indexed)
}
plot(p$StartTime,index_function(p$DK1),type='l')
index_function(p$DK1)
p$DK1
plot(p$StartTime,p$DK1,type='l')
source("R:/ØKONOMI/CONTROLLING/TOBR/Solcelleberegner/Nordpool/nordpoolspotr.R")
library(dplyr)
library(purrr)
# Get the Danish prices in DKK
p <- np_prices(time_unit = "daily", currency = "DKK", areas = c("DK1", "DK2"))
plot(p$DK1,type='l')
plot(index_function(p$DK1),type='l')
?plot
line(index_function(p$DK1),type='l')
lines(index_function(p$DK1),type='l')
plot(p$DK1,type='l', col = 'r')
plot(p$EndTime, p$DK1,type='l', col = 2)
lines(p$EndTime,index_function(p$DK1),type='l', col = 3)
source("R:/ØKONOMI/CONTROLLING/TOBR/Solcelleberegner/Nordpool/nordpoolspotr.R")
library(dplyr)
library(purrr)
# Get the Danish prices in DKK
p <- np_prices(time_unit = "daily", currency = "DKK", areas = c("DK1", "DK2"))
plot(p$DK1,type='l')
# function for indexing:
index_function <- function(x){
# input: x, a vector
# output: x_indexed, a vector
initial <- x[1]
x_indexed <- map_dbl(x, function(x){x/initial * 100})
return(x_indexed)
}
plot(p$EndTime, index_function(p$DK1),type='l', col = 2)
lines(p$EndTime,(p$DK1),type='l', col = 3)
source("R:/ØKONOMI/CONTROLLING/TOBR/Solcelleberegner/Nordpool/nordpoolspotr.R")
library(dplyr)
library(purrr)
# Get the Danish prices in DKK
p <- np_prices(time_unit = "daily", currency = "DKK", areas = c("DK1", "DK2"))
plot(p$DK1,type='l')
# function for indexing:
index_function <- function(x){
# input: x, a vector
# output: x_indexed, a vector
initial <- x[1]
x_indexed <- map_dbl(x, function(x){x/initial * 100})
return(x_indexed)
}
plot(p$StartTime, index_function(p$DK1),type='l', col = 2)
lines(p$StartTime,(p$DK1),type='l', col = 3)
source("R:/ØKONOMI/CONTROLLING/TOBR/Solcelleberegner/Nordpool/nordpoolspotr.R")
library(dplyr)
library(purrr)
# Get the Danish prices in DKK
p <- np_prices(time_unit = "daily", currency = "DKK", areas = c("DK1", "DK2"))
plot(p$DK1,type='l')
# function for indexing:
index_function <- function(x){
# input: x, a vector
# output: x_indexed, a vector
initial <- x[1]
x_indexed <- map_dbl(x, function(x){x/initial * 100})
return(x_indexed)
}
plot(p$StartTime, (p$DK1),type='l', col = 2)
lines(p$StartTime,index_function(p$DK1),type='l', col = 3)
plot(p$StartTime, (p$DK1),type='l', col = 2)
plot(p$StartTime, (p$DK1),type='l', col = 2)
lines(p$StartTime, (p$DK2),type='l', col = 3)
plot(p$StartTime, (p$DK1),type='l', col = 2)
lines(p$StartTime, (p$DK2),type='l', col = 3)
legend(c('DK1','DK2'))
plot(p$StartTime, (p$DK1),type='l', col = 2)
lines(p$StartTime, (p$DK2),type='l', col = 3)
legend(1, 95, legend=c("DK1", "DK2"),
col=c(2,3), lty=1:2, cex=0.8)
plot(p$StartTime, (p$DK1),type='l', col = 2)
lines(p$StartTime, (p$DK2),type='l', col = 3)
legend(x = "topleft", legend=c("DK1", "DK2"),
col=c(2,3), lty=1:2, cex=0.8)
plot(p$StartTime, (p$DK1),type='l', col = 2)
lines(p$StartTime, (p$DK2),type='l', col = 3)
legend(x = "topleft", legend=c("DK1", "DK2"),
col=c(2,3))
plot(p$StartTime, (p$DK1),type='l', col = 2)
lines(p$StartTime, (p$DK2),type='l', col = 3)
legend(x = "topleft", legend=c("DK1", "DK2"),
col=c(2,3), lty=1:2)
plot(p$StartTime, (p$DK1),type='l', col = 2, lty )
plot(p$StartTime, (p$DK1),type='l', col = 2, lty = 2)
lines(p$StartTime, (p$DK2),type='l', col = 3)
legend(x = "topleft", legend=c("DK1", "DK2"),
col=c(2,3), lty=1:1)
plot(p$StartTime, (p$DK1),type='l', col = 2)
lines(p$StartTime, (p$DK2),type='l', col = 3)
legend(x = "topleft", legend=c("DK1", "DK2"),
col=c(2,3), lty=1:1)
source("R:/ØKONOMI/CONTROLLING/TOBR/Solcelleberegner/Nordpool/nordpoolspotr.R")
library(dplyr)
library(purrr)
# Get the Danish prices in DKK
p <- np_prices(time_unit = "daily", currency = "DKK", areas = c("DK1", "DK2"))
source("R:/ØKONOMI/CONTROLLING/TOBR/Solcelleberegner/Nordpool/nordpoolspotr.R")
library(dplyr)
library(purrr)
# Get the Danish prices in DKK
p <- np_prices(time_unit = "monthly", currency = "DKK", areas = c("DK1", "DK2"))
p$StartTime
source("R:/ØKONOMI/CONTROLLING/TOBR/Solcelleberegner/Nordpool/nordpoolspotr.R")
library(dplyr)
library(purrr)
# Get the Danish prices in DKK
p <- np_prices(time_unit = "hourly", currency = "DKK", areas = c("DK1", "DK2"))
source("R:/ØKONOMI/CONTROLLING/TOBR/Solcelleberegner/Nordpool/nordpoolspotr.R")
library(dplyr)
library(purrr)
# Get the Danish prices in DKK
p <- np_prices(time_unit = "daily", currency = "DKK", areas = c("DK1", "DK2"))
rm(list = ls())
# Get directory of file
dir <- dirname(rstudioapi::getActiveDocumentContext()$path)
dir
install.packages("installr")
library(installr)
updateR()
install.packages("rlang")
install.packages("rlang")
remove.packages(rlang)
remove.packages('rlang')
install.packages("rlang")
updateR()
library(installr)
suppressPackageStartupMessages(library(installr))
updateR()
updateR()
tab<-xtable(ExpData(data=dfData,type=1), caption= "summary statistics of air pollution data",
align=c("l","l","c"))
library(SmartEDA)
library(arrow)
library(ggthemes)
library(DataExplorer)
library(dplyr)
library(xtable)
rm(list=ls())
dir <- "C:/Users/tobr/OneDrive - NRGi A S/Projekter/ProjectBasedInternship/Data"
setwd(dir)
# Source GetData
source('0_GetData.r')
# Get directory of file
# dfData <- read_parquet("dfData.parquet")
# Order by date
dfData <- dfData %>% arrange(date)
# use ExpReport
# ExpReport(dfData, op_file = 'ExploratoryDataAnalysis.html')
tab<-xtable(ExpData(data=dfData,type=1), caption= "summary statistics of air pollution data",
align=c("l","l","c"))
tab
?xtable
xtable(ExpData(data=dfData,type=1), auto = T)
N <- c(0,1,0,1,1,1,0,0,0,1,1,0,1,1,0,0,1,0,1,0,1,1,0,0)
P <- c(1,1,0,0,0,1,0,1,1,1,0,0,0,1,0,1,1,0,0,1,0,1,1,0)
K <- c(1,0,0,1,0,1,1,0,0,1,0,1,0,1,1,0,0,0,1,1,1,0,1,0)
yield <- c(49.5,62.8,46.8,57.0,59.8,58.5,55.5,56.0,62.8,55.8,69.5,55.0,
62.0,48.8,45.5,44.2,52.0,51.5,49.8,48.8,57.2,59.0,53.2,56.0)
npk <- data.frame(block = gl(6,4), N = factor(N), P = factor(P),
K = factor(K), yield = yield)
npk.aov <- aov(yield ~ block + N*P*K, npk)
op <- options(contrasts = c("contr.helmert", "contr.treatment"))
npk.aovE <- aov(yield ~  N*P*K + Error(block), npk)
options(op)
summary(npk.aov)
print(xtable(npk.aov))
print(xtable(anova(npk.aov)))
print(xtable(summary(npk.aov)))
summary(npk.aovE)
print(xtable(npk.aovE), type = "html")
print(xtable(summary(npk.aovE)), type = "html")
op <- options(contrasts = c("contr.helmert", "contr.treatment"))
npk.aovE <- aov(yield ~  N*P*K + Error(block), npk)
options(op)
summary(npk.aov)
print(xtable(npk.aov))
xtable(ExpData(data=dfData,type=1), auto = T)
print(tab,file="eda_1.tex",append=T,table.placement = "h",
caption.placement="top", hline.after=seq(from=-1,to=nrow(tab),by=1))
print(tab,file="./Tables/eda_1.tex",append=T,table.placement = "h",
caption.placement="top", hline.after=seq(from=-1,to=nrow(tab),by=1))
print(tab,file="./Results/Tables/eda_1.tex",append=T,table.placement = "h",
caption.placement="top", hline.after=seq(from=-1,to=nrow(tab),by=1))
eda_1<-xtable(ExpData(data=dfData,type=1), caption= "Summary of Dataset",
align=c("l","l","c"))
print(eda_1,file="./Results/Tables/eda_1.tex",append=T,table.placement = "h",
caption.placement="top", hline.after=seq(from=-1,to=nrow(tab),by=1))
print(eda_1,file="./Results/Tables/eda_1.tex",append=F,table.placement = "h",
caption.placement="top")
ExpData(data=dfData,type=2)
ExpData(data=dfData,type=2)[,-1]
eda_2<-xtable(ExpData(data=dfData,type=2)[,-1], caption= "Summary of Variables",
auto = T)
eda_2
print(eda_2,file="./Results/Tables/eda_2.tex",append=F,table.placement = "h",
caption.placement="top")
eda_1<-xtable(ExpData(data=dfData,type=1), caption= "Summary of Dataset",
align=c("l","l","c"))
print(eda_1,file="./Results/Tables/eda_1.tex",append=F,table.placement = "h",
caption.placement="top")
eda_2<-xtable(ExpData(data=dfData,type=2)[,-1], caption= "Summary of Variables",
auto = T)
print(eda_2,file="./Results/Tables/eda_2.tex",append=F,table.placement = "h",
caption.placement="top")
print(eda_2,file="./Results/Tables/eda_2.tex",append=F,table.placement = "h",
caption.placement="top",tabular.environment = "longtable")
print(eda_2,file="./Results/Tables/eda_2.tex",append=F,table.placement = "h",
caption.placement="top",tabular.environment = "sidewaystable")
eda_1<-xtable(ExpData(data=dfData,type=1), caption= "Summary of Dataset",
align=c("l","l","c"))
print(eda_1,file="./Results/Tables/eda_1.tex",append=F,
caption.placement="top")
eda_2<-xtable(ExpData(data=dfData,type=2)[,-1], caption= "Summary of Variables",
auto = T, )
print(eda_2,file="./Results/Tables/eda_2.tex",append=F,
caption.placement="top")
library(texreg)
install.packages(texreg)
install.packages('texreg')
library(texreg)
texreg(ExpData(data=dfData,type=1))
library(xtable)
eda_2
?xtable
library(SmartEDA)
library(arrow)
library(ggthemes)
library(DataExplorer)
library(dplyr)
library(texreg)
library(xtable)
rm(list=ls())
dir <- "C:/Users/tobr/OneDrive - NRGi A S/Projekter/ProjectBasedInternship/Data"
setwd(dir)
# Source GetData
source('0_GetData.r')
eda_1 <- xtable(ExpData(data=dfData,type=1),
caption= "Summary of Dataset",
align=c("l","l","c"))
print(eda_1,file="./Results/Tables/eda_1.tex",append=F,
caption.placement="top")
eda_1
eda_2 <- xtable(ExpData(data=dfData,type=2)[,-1],
caption= "Summary of Variables",
auto = T)
eda_2
print(eda_2,file="./Results/Tables/eda_2.tex",append=F,
caption.placement="top")
ExpData(data=Carseats,type=2, fun = c("mean", "median", "var"))
ExpData(data=dfData,type=2, fun = c("mean", "median", "var"))
ExpData(data=dfData,type=2, fun = c("mean", "median", "std"))
?ExpData
eda_2 <- xtable(ExpData(data=dfData,type=2, fun = c("mean", "median", "var")),
caption= "Summary of Variables",
auto = T)
print(eda_2,file="./Results/Tables/eda_2.tex",append=F,
caption.placement="top")
eda_2
eda_2[4]
eda_2[,4]
eda_2[,6]
eda_2[,8]
eda_2[,10]
eda_2[,10] <- sqrt(eda_2[,10])
eda_2
eda_2 <- xtable(ExpData(data=dfData,type=2, fun = c("mean", "median", "stdev")),
caption= "Summary of Variables",
auto = T)
eda_2 <- xtable(ExpData(data=dfData,type=2, fun = c("mean", "median", "sd")),
caption= "Summary of Variables",
auto = T)
print(eda_2,file="./Results/Tables/eda_2.tex",append=F,
caption.placement="top")
eda_2
eda_1 <- xtable(ExpData(data=dfData,type=1),
caption= "Summary of Dataset",
align=c("l","l","c"), include.rownames=FALSE)
print(eda_1,file="./Results/Tables/eda_1.tex",append=F,
caption.placement="top")
eda_1
eda_2 <- xtable(ExpData(data=dfData,type=2, fun = c("mean", "median", "sd")),
caption= "Summary of Variables", include.rownames=F,
auto = T)
print(eda_2,file="./Results/Tables/eda_2.tex",append=F,
caption.placement="top", floating.environment = "sidewaystable")
eda_2
print(eda_2,file="./Results/Tables/eda_2.tex",append=F,
caption.placement="top",floating = T, floating.environment = "sidewaystable")
eda_2
eda_2 <- xtable(ExpData(data=dfData,type=2, fun = c("mean", "median", "sd")),
caption= "Summary of Variables", include.rownames=F,
auto = T)
print(eda_2,file="./Results/Tables/eda_2.tex",append=F,
caption.placement="top",floating = T, floating.environment = "sidewaystable")
eda_2
eda_2 <- xtable(ExpData(data=dfData,type=2, fun = c("mean", "median", "sd"))[,-1],
caption= "Summary of Variables", include.rownames=F,
auto = T)
print(eda_2,file="./Results/Tables/eda_2.tex",append=F,
caption.placement="top",floating = T, floating.environment = "sidewaystable")
eda_2
eda_2 <- xtable(ExpData(data=dfData,type=2, fun = c("mean", "median", "sd"))[,-1],
caption= "Summary of Variables", include.rownames=F)
print(eda_2,file="./Results/Tables/eda_2.tex",append=F,
caption.placement="top",floating = T, floating.environment = "sidewaystable")
eda_2
eda_2 <- xtable(ExpData(data=dfData,type=2)[,-1],
caption= "Summary of Variables", include.rownames=F)
print(eda_2,file="./Results/Tables/eda_2.tex",append=F,
caption.placement="top",floating = T, floating.environment = "sidewaystable")
eda_2
